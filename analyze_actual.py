# Known values with their decimal equivalents
KNOWN_VALUES = [
    (56, "000000000000000000000000000000000000000000000000009D18B63AC4FFDF", 72057594037927935),
    (57, "00000000000000000000000000000000000000000000000001EB25C90795D61C", 144115188075855871),
    (58, "00000000000000000000000000000000000000000000000002C675B852189A21", 288230376151711743),
    (59, "00000000000000000000000000000000000000000000000007496CBB87CAB44F", 576460752303423487),
    (60, "0000000000000000000000000000000000000000000000000FC07A1825367BBE", 1152921504606846975),
    (61, "00000000000000000000000000000000000000000000000013C96A3742F64906", 2305843009213693951),
    (62, "000000000000000000000000000000000000000000000000363D541EB611ABEE", 4611686018427387903),
    (63, "0000000000000000000000000000000000000000000000007CCE5EFDACCF6808", 9223372036854775807),
    (64, "000000000000000000000000000000000000000000000000F7051F27B09112D4", 18446744073709551615),
    (65, "000000000000000000000000000000000000000000000001A838B13505B26867", 36893488147419103231),
    (66, "000000000000000000000000000000000000000000000002832ED74F2B5E35EE", 73786976294838206463)
]

print("Analyzing actual value patterns:")
print("=" * 50)

for i in range(len(KNOWN_VALUES)-1):
    curr_num, curr_hex, curr_dec = KNOWN_VALUES[i]
    next_num, next_hex, next_dec = KNOWN_VALUES[i+1]
    
    ratio = next_dec / curr_dec
    print(f"\nFrom puzzle {curr_num} to {next_num}:")
    print(f"Value {curr_num}: {curr_dec}")
    print(f"Value {next_num}: {next_dec}")
    print(f"Ratio: {ratio}")

print("\nProjecting to puzzle 67:")
print("=" * 50)
last_num, last_hex, last_dec = KNOWN_VALUES[-1]
ratio = 2  # Based on observed pattern

projected_dec = last_dec * ratio
projected_hex = hex(projected_dec)

print(f"Last known (66): {last_dec}")
print(f"Projected (67): {projected_dec}")
print(f"In hex: {projected_hex}")

