import math

# More complete list of private keys
privkeys = [
    "0000000000000000000000000000000000000000000000000000000000000001",
    "0000000000000000000000000000000000000000000000000000000000000003",
    "0000000000000000000000000000000000000000000000000000000000000007",
    "0000000000000000000000000000000000000000000000000000000000000008",
    "0000000000000000000000000000000000000000000000000000000000000015",
    "0000000000000000000000000000000000000000000000000000000000000031",
    "000000000000000000000000000000000000000000000000000000000000004c",
    "00000000000000000000000000000000000000000000000000000000000000e0",
    "00000000000000000000000000000000000000000000000000000000000001d3",
    "0000000000000000000000000000000000000000000000000000000000000202",
    "0000000000000000000000000000000000000000000000000000000000000483",
    "0000000000000000000000000000000000000000000000000000000000000a7b",
    "0000000000000000000000000000000000000000000000000000000000001460",
    "0000000000000000000000000000000000000000000000000000000000002930",
    "00000000000000000000000000000000000000000000000000000000000068f3"
]

def analyze_growth_pattern(keys):
    decimals = [int(k, 16) for k in keys]
    
    print("\nGrowth Analysis:")
    print("Key Number | Decimal Value | Growth Factor | Log Base PHI")
    print("-" * 60)
    
    phi = (1 + math.sqrt(5)) / 2
    
    for i, val in enumerate(decimals, 1):
        if i > 1:
            growth = val / decimals[i-2]
            # Calculate logarithm base phi of the value
            log_phi = math.log(val, phi) if val > 0 else 0
            print(f"{i:9d} | {val:12d} | {growth:12.2f} | {log_phi:12.2f}")
        else:
            print(f"{i:9d} | {val:12d} | {'N/A':>12} | {0:12.2f}")

    # Check for exponential growth pattern
    print("\nExponential Growth Check:")
    for i in range(len(decimals)-1):
        if decimals[i] != 0:
            ratio = decimals[i+1] / decimals[i]
            print(f"Ratio {i+1}->{i+2}: {ratio:.4f}")

analyze_growth_pattern(privkeys)

